@{
    ViewBag.Title = "Пояснительная записка";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<p>
    Если вы видите эту страницу значит приложение все-таки запустилось, что уже не плохо. сразу хочу извиниться за кривое 
    отображение страниц и элементов управления, понадеялся на Bootstrap, я в основном пользуюсь FireFox, и в нем все отображается нормально,
    однако, в Chrome и IE, возможны артефакты отображения, в основном это касается витжета ввода меток. 
</p>

<h3>UseCase диаграмма</h3>

<p>
    В соответствии с заданием необходимо было разработать UseCase диаграмму она представлена ниже, сразу отмечу, что UML я изучал очень давно, 
    а использовал практически никогда, поэтому строил диаграмму по описаниям из интернета, возможно в ней есть ошибки возможно ошибок очень много. 
<p>
<figure>

    <img class=" img-rounded img-responsive" src="~/Images/Diagram.png"/>
    <figcaption style="text-align:center">Рис.1 UseCase - диаграмма системы</figcaption>
</figure>

<h3>DocsRepositoryData</h3>
<p>
    Данная библиотека отвечает за обеспечение доступа к данным. Для обеспечения доступа к данным из разных источников 
    используется интерфейс IRеpository. В задании говорилось что нужно продумать возможность быстрой смены поставщика 
    данных, скажу честно, как такое сделать мне слабо представляется разве что средствами позднего связывания, но для 
    ASP  проекта не уверен, на эксперименты времени не было, тем не менее смена поставщиков у меня организована средствами
    Ninject, в данном проекте это замена одной строчки, вопрос лишь в том, устраивает ли вариант с перекомпиляцией проекта.
</p>
<p>
    В данной библиотеке определен класс Document, в ТЗ не указан атрибут Id, но я его добавил для удобства при работе с БД,
    также добавил метод GetTags, для представления строки меток в виде коллекции, это было сделано для удобства отображения 
    меток на странице, а также поиска по меткам. Метод ToString() был переопределен для удобства эмуляции загрузки файла. Так как в ТЗ не совсем
    точно написано, что представляет из себя класс документа, является ли он непосредственным носителем данных, или же является 
    оболочкой для данных. 
</p>
<p>
    Класс XMLDefaultData просто служебный класс, для быстрой генерации данных на первом этапе разработки.
</p>
<p>
    В классе XMLDocumentsRepository пришлось сделать эмуляцию присвоения идентификатора для обеспечения реализации 
    загрузки файла, реализованное решение очень нехорошее, но времени оставалось мало, а контроллер должен был как-то определять
    какой файл загружать. 
</p>

<h3>BicycleAuth</h3>
<p>
    Согласно ТЗ, необходимо было реализовать свой сервис авторизации, к сожалению авторизация на сайтах до сих пор для меня является
    камнем преткновения, я знаю только о стандартных реализациях .NET, но не имею представления об их внутреннем устройстве
    и схем взаимодействия интерфейсов не нашел. Так как в ТЗ делался упор на обеспечении безопасности хранения пароля, я решил использовать 
    FormsAuthentification для авторизации и аутентификации и БД, для хранения пользователей и паролей, наиболее оптимальным 
    вариантом обеспечения безопасного хранения пароля является хеширование, с этой целью и был создан статический класс PasswordHasher, 
    при регистрации пользователя пароль будет хешироваться, при авторизации будут сравниваться хеши паролей. С точки зрения хранения - 
    относительно безопасно, злоумышленнику укравшему базу придется долго подбирать пароли для каждого пользователя проверяя все 
    известные алгоритмы хеширования, если же перехватит куки, то тут мало что спасает. Данные о 
    пользователях хранятся в отдельной базе данных, хорошо это или плохо - не знаю, для меня, это повод для дискуссии. 
</p>

<h3>DocsRepository</h3>
<p>
    Собственно само приложение, что нужно знать о структуре каталогов:
    <ul>
        <li>Класс NinjectControllerFactory - здесь внедряются зависимости для Acconunt и Documents контроллеров, в методе AddBindings() 
        меняется источник данных</li>
        <li>В папке AppData, должны находится 2 БД Users и DocsRepository а также XML-файлы</li>
        <li>В папке Scripts только файл SearchScript.js содержит скрипты, написанные мной, все остальное относится к фреймворкам и витжетам. 
        SerchScript содержит скрипты  для инициализации витжетов, осуществления асинхронного поиска, автозаполнения, и сортировки списка
        загруженных файлов</li>
        <li>В папке Content, находятся только стили фреймворков и витжетов</li>
        
    </ul>
    
</p>
<h4>
    На этом, пожалуй, все, надеюсь, что увиденное вас не сильно опечалит...
</h4>
